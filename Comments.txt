00-56
	register our content provider so that the content resolver is aware of it
	
00-58
	just as we have to define our activites in the AndroidManifest so that Android knows how to lauch the Activity
	
	we have to define our content provider in the AndroidManifest as well
	
01-16
	*************** AndroidManifest.xml MODIFY (starts 01-16) ***************

02-15
	the name attribute is the full name of our content provider class
	
	the authorities attribute: ideally would be able to use the constant contract content_authority from the AppProvider class for this attribute
	
02-58
	we have to copy and paste the value from the CONTENT_AUTHORITY field of AppProvider
	
03-18
	the exported attribute is used to specify whether the content provider can be accessed by other applications
	
	we keep it private for now
	
	//////////////////////
		We have to define our content provider in the AndroidManifest so that the content resolver is aware of it.
		The name attribute is the full name of our content provider class.
		We copy and paste the value from the CONTENT_AUTHORITY field of AppProvider for the authorities attribute.
		The exported attribute is used to specify whether the content provider can be accessed by other applications. It is set as private temporarily so that we do not have to deal with permissions yet.
	//////////////////////

03-42
	Google documentation -> provider element
	
04-12
	*************** MainActivity MODIFY (starts 01-16) ***************
		1:
			private static final String TAG = "MainActivity";
		2:
			projection
			contentResolver
			cursor
			if (cursor != null)
			
			
07-32
	We specify the columns we want to see in the query by creating a string array listing them.
	Next we get a reference to the content resolver and we call its query method
	Because we use the uri for our tasks table, the content resolver knows that it has to extract the authority from the uri to work out which provider to use and then it passes the entire uri on to our provider to run the query
	As long as the cursor returned by the query is not null, we will loop through all the rows
	The code loops through all the columns in the cursor and logs the name and value of each one
			
	
		
		
		
		
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
*************** AndroidManifest.xml MODIFY (starts 01-16) ***************
	1:
		<provider
	
	
	
	
	